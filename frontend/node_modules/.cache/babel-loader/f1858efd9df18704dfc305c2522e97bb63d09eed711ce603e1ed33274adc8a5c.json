{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Twinkle\\\\Desktop\\\\DormFindr_WebApp\\\\frontend\\\\src\\\\user\\\\AccountVerificationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./AccountVerificationScreen.css\";\nimport user from \"../images/user.png\"; // Assuming this is the correct path for your user icon\nimport fadpage1 from \"../images/bg.png\"; // Assuming this is the correct background image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountVerificationScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // Assuming this is being set elsewhere in your code\n  const [otp, setOTP] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [verificationStatus, setVerificationStatus] = useState(null);\n  const handleOTPChange = e => {\n    setOTP(e.target.value);\n  };\n  const verifyOTP = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3000/verifyOTP', {\n        // Make sure the endpoint is correct\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: userEmail,\n          enteredOTP: otp\n        })\n      });\n      const data = await response.json();\n      if (data.isVerified) {\n        // OTP is correct\n        setVerificationStatus(\"OTP verified successfully.\");\n        navigate(\"/login\");\n      } else {\n        // OTP is incorrect\n        setVerificationStatus(\"Incorrect OTP. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error verifying OTP:\", error);\n      setVerificationStatus(\"Error verifying OTP. Please try again later.\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Account-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: fadpage1,\n        className: \"background-image\",\n        alt: \"Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user,\n        className: \"user-icon\",\n        alt: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp-instructions\",\n          children: [\"We sent your code\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Enter the confirmation code below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \"\\\\d*\",\n          inputMode: \"numeric\",\n          className: \"otp-input\",\n          placeholder: \"Enter your OTP\",\n          value: otp,\n          onChange: handleOTPChange,\n          maxLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"verify-button\",\n          onClick: verifyOTP,\n          disabled: isLoading,\n          children: isLoading ? 'Verifying...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), verificationStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-status\",\n          children: verificationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountVerificationScreen, \"h//NZIGnDv5jJFC9x2JEIqGhLyg=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountVerificationScreen;\nexport default AccountVerificationScreen;\nvar _c;\n$RefreshReg$(_c, \"AccountVerificationScreen\");","map":{"version":3,"names":["React","useState","useNavigate","user","fadpage1","jsxDEV","_jsxDEV","AccountVerificationScreen","_s","navigate","userEmail","setUserEmail","otp","setOTP","error","setError","isLoading","setIsLoading","verificationStatus","setVerificationStatus","handleOTPChange","e","target","value","verifyOTP","response","fetch","method","headers","body","JSON","stringify","email","enteredOTP","data","json","isVerified","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","pattern","inputMode","placeholder","onChange","maxLength","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Twinkle/Desktop/DormFindr_WebApp/frontend/src/user/AccountVerificationScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./AccountVerificationScreen.css\";\r\nimport user from \"../images/user.png\"; // Assuming this is the correct path for your user icon\r\nimport fadpage1 from \"../images/bg.png\"; // Assuming this is the correct background image\r\n\r\nconst AccountVerificationScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [userEmail, setUserEmail] = useState(''); // Assuming this is being set elsewhere in your code\r\n  const [otp, setOTP] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [verificationStatus, setVerificationStatus] = useState(null);\r\n\r\n  const handleOTPChange = (e) => {\r\n    setOTP(e.target.value);\r\n  };\r\n\r\n  const verifyOTP = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:3000/verifyOTP', { // Make sure the endpoint is correct\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: userEmail, enteredOTP: otp }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.isVerified) {\r\n        // OTP is correct\r\n        setVerificationStatus(\"OTP verified successfully.\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        // OTP is incorrect\r\n        setVerificationStatus(\"Incorrect OTP. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying OTP:\", error);\r\n      setVerificationStatus(\"Error verifying OTP. Please try again later.\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Account-screen\">\r\n      <div className=\"Account-container\">\r\n        <img src={fadpage1} className=\"background-image\" alt=\"Background\" />\r\n        <img src={user} className=\"user-icon\" alt=\"User\" />\r\n        <div className=\"otp-section\">\r\n          <div className=\"otp-instructions\">\r\n            We sent your code\r\n            <span>Enter the confirmation code below</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            pattern=\"\\d*\"\r\n            inputMode=\"numeric\"\r\n            className=\"otp-input\"\r\n            placeholder=\"Enter your OTP\"\r\n            value={otp}\r\n            onChange={handleOTPChange}\r\n            maxLength=\"6\"\r\n          />\r\n          <button className=\"verify-button\" onClick={verifyOTP} disabled={isLoading}>\r\n            {isLoading ? 'Verifying...' : 'Submit'}\r\n          </button>\r\n          {verificationStatus && <div className=\"verification-status\">{verificationStatus}</div>}\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountVerificationScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}