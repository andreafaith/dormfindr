{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Twinkle\\\\Desktop\\\\DormFindr_WebApp\\\\frontend\\\\src\\\\user\\\\AccountVerificationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./AccountVerificationScreen.css\";\nimport fadpage1 from \"../images/accveriwobutton.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountVerificationScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // Assuming you'll get this from user input or session\n  const [otp, setOTP] = useState(\"\"); // Added state for OTP\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigateToVerification = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:4000/api/dormfindr/account-verification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: userEmail\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        navigate(\"/OTP\");\n      } else {\n        setError(data.error || 'Failed to verify account');\n      }\n    } catch (error) {\n      setError(\"Error sending email: \" + error.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Account-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"verify-button\",\n          onClick: navigateToVerification,\n          disabled: isLoading,\n          children: isLoading ? 'Verifying...' : 'Verify Your Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fadpage1,\n        alt: \"Image 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"otp-input\",\n          type: \"text\",\n          value: otp,\n          onChange: handleOTPChange,\n          placeholder: \"Enter your OTP\",\n          maxLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"otp-submit-button\",\n          onClick: submitOTP,\n          children: \"Submit OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountVerificationScreen, \"Bv0j6X156z8xMKwCF2zNvec6DHY=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountVerificationScreen;\nexport default AccountVerificationScreen;\nvar _c;\n$RefreshReg$(_c, \"AccountVerificationScreen\");","map":{"version":3,"names":["React","useState","fadpage1","useNavigate","jsxDEV","_jsxDEV","AccountVerificationScreen","_s","navigate","userEmail","setUserEmail","otp","setOTP","error","setError","isLoading","setIsLoading","navigateToVerification","response","fetch","method","headers","body","JSON","stringify","email","data","json","ok","success","message","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","value","onChange","handleOTPChange","placeholder","maxLength","submitOTP","_c","$RefreshReg$"],"sources":["C:/Users/Twinkle/Desktop/DormFindr_WebApp/frontend/src/user/AccountVerificationScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./AccountVerificationScreen.css\"\r\nimport fadpage1 from \"../images/accveriwobutton.png\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nconst AccountVerificationScreen = () => {\r\n  const navigate = useNavigate(); \r\n  const [userEmail, setUserEmail] = useState(''); // Assuming you'll get this from user input or session\r\n  const [otp, setOTP] = useState(\"\"); // Added state for OTP\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const navigateToVerification = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/dormfindr/account-verification', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: userEmail }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok && data.success) {\r\n        navigate(\"/OTP\");\r\n      } else {\r\n        setError(data.error || 'Failed to verify account');\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error sending email: \" + error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n return (\r\n    <div className=\"Account-screen\">\r\n      <div className=\"Account-container\">\r\n        {/* Existing verify container */}\r\n        <div className=\"verify-container\">\r\n            <button className=\"verify-button\" onClick={navigateToVerification} disabled={isLoading}>\r\n              {isLoading ? 'Verifying...' : 'Verify Your Account'}\r\n            </button>\r\n        </div>\r\n        {/* Error message display */}\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <img src={fadpage1} alt=\"Image 1\" />\r\n        {/* OTP input container */}\r\n        <div className=\"otp-container\">\r\n          <input\r\n            className=\"otp-input\"\r\n            type=\"text\"\r\n            value={otp}\r\n            onChange={handleOTPChange}\r\n            placeholder=\"Enter your OTP\"\r\n            maxLength=\"6\"\r\n          />\r\n          <button className=\"otp-submit-button\" onClick={submitOTP}>\r\n            Submit OTP\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountVerificationScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}