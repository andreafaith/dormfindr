{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Twinkle\\\\Documents\\\\Finals\\\\TO_PUSH\\\\dormfindr\\\\frontend\\\\src\\\\user\\\\SignUpScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'; // Import axios for API calls\nimport \"./SignUpScreen.css\";\nimport backgroundImage from \"../images/bg.png\";\nimport user from \"../images/user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(''); // State for username\n  const [email, setEmail] = useState(''); // State for email\n  const [password, setPassword] = useState(''); // State for password\n  const [error, setError] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // State for confirm password\n  const [selectedRole, setSelectedRole] = useState(\"TIP Commnunity\", \"Dormitory Provider\");\n  const handleRoleChange = event => {\n    setSelectedRole(event.target.value);\n  };\n  const handleSignUp = async () => {\n    let emailValidation = true;\n    if (selectedRole === \"TIP Community\") {\n      emailValidation = email.endsWith(\"@tip.edu.ph\");\n      if (!emailValidation) {\n        setError('Only email addresses with the \"@tip.edu.ph\" domain are allowed for TIP Community.');\n        return;\n      }\n    }\n    if (selectedRole === \"Dormitory Provider\") {\n      emailValidation = email.endsWith(\"@gmail.com\");\n      if (!emailValidation) {\n        setError('This organization email is not suitable for this sign up. Please use personal email.');\n        return;\n      }\n    }\n\n    //if (!email.endsWith('@tip.edu.ph')) {\n    //  setError('Only email addresses with the \"tip.edu.ph\" domain are allowed.');\n    //  return; // Exit the function to prevent further execution\n    //}\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return; // Exit the function if the passwords do not match\n    }\n\n    ;\n\n    // Construct the user object\n    const newUser = {\n      username,\n      email,\n      password,\n      role: selectedRole\n    };\n    try {\n      // Replace with your backend endpoint\n      const response = await axios.post('http://localhost:4000/api/dormfindr/signup', newUser);\n      // If the signup is successful, navigate to the account verification page\n      navigate(\"/account-verification\");\n    } catch (error) {\n      if (error.response && error.response.status === 400 && error.response.data.message === 'User already exists') {\n        // If the backend returns a 400 status with a 'User already exists' message, handle it here\n        setError('A user with this email already exists. Please log in or use a different email.');\n      } else if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Signup error', error.response.data);\n        // Handle the error response here\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Signup error', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error', error.message);\n      }\n      // Handle general errors here, such as displaying a notification to the user\n    }\n  };\n\n  const goToTerms = () => {\n    navigate(\"/terms\");\n  };\n  const handleVerify = async () => {\n    try {\n      // Replace with your backend endpoint\n      const response = await axios.post('http://localhost:4000/api/dormfindr/sendEmail', {\n        email: email\n      });\n      console.log(response.data.message);\n      // Show some success message or handle the response further\n    } catch (error) {\n      console.error('Verification email error', error);\n      // Handle the error here, such as displaying a notification to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-screen\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm your Password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-dropdown-container\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRole,\n          onChange: handleRoleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TIP Community\",\n            children: \"TIP Community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dormitory Provider\",\n            children: \"Dormitory Provider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-click\",\n        onClick: handleSignUp,\n        children: [\"Sign Up as \", selectedRole]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          onClick: goToTerms,\n          children: \"Terms \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \"and\", /*#__PURE__*/_jsxDEV(\"b\", {\n          onClick: goToTerms,\n          children: \" Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpScreen, \"SHY3Mjfn1IK8MCOEvWH+tSm+UoA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpScreen;\nexport default SignUpScreen;\nvar _c;\n$RefreshReg$(_c, \"SignUpScreen\");","map":{"version":3,"names":["React","useState","useNavigate","axios","backgroundImage","user","jsxDEV","_jsxDEV","SignUpScreen","_s","navigate","username","setUsername","email","setEmail","password","setPassword","error","setError","confirmPassword","setConfirmPassword","selectedRole","setSelectedRole","handleRoleChange","event","target","value","handleSignUp","emailValidation","endsWith","newUser","role","response","post","status","data","message","console","request","goToTerms","handleVerify","log","className","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/Twinkle/Documents/Finals/TO_PUSH/dormfindr/frontend/src/user/SignUpScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios'; // Import axios for API calls\r\nimport \"./SignUpScreen.css\";\r\nimport backgroundImage from \"../images/bg.png\";\r\nimport user from \"../images/user.png\";\r\n\r\n\r\nconst SignUpScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(''); // State for username\r\n  const [email, setEmail] = useState(''); // State for email\r\n  const [password, setPassword] = useState(''); // State for password\r\n  const [error, setError] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState(''); // State for confirm password\r\n  const [selectedRole, setSelectedRole] = useState(\"TIP Commnunity\", \"Dormitory Provider\");\r\n\r\n  const handleRoleChange = (event) => {\r\n    setSelectedRole(event.target.value);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    let emailValidation = true;\r\n\r\n    if (selectedRole === \"TIP Community\") {\r\n      emailValidation = email.endsWith(\"@tip.edu.ph\");\r\n      if (!emailValidation) {\r\n        setError('Only email addresses with the \"@tip.edu.ph\" domain are allowed for TIP Community.')\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (selectedRole === \"Dormitory Provider\") {\r\n      emailValidation = email.endsWith(\"@gmail.com\");\r\n      if (!emailValidation) {\r\n        setError('This organization email is not suitable for this sign up. Please use personal email.')\r\n        return;\r\n      }\r\n    }\r\n    \r\n    //if (!email.endsWith('@tip.edu.ph')) {\r\n    //  setError('Only email addresses with the \"tip.edu.ph\" domain are allowed.');\r\n    //  return; // Exit the function to prevent further execution\r\n    //}\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return; // Exit the function if the passwords do not match\r\n   \r\n    \r\n    };\r\n    \r\n    // Construct the user object\r\n    const newUser = {\r\n      username,\r\n      email,\r\n      password,\r\n      role: selectedRole,\r\n    };\r\n\r\n    try {\r\n      // Replace with your backend endpoint\r\n      const response = await axios.post('http://localhost:4000/api/dormfindr/signup', newUser);\r\n      // If the signup is successful, navigate to the account verification page\r\n      navigate(\"/account-verification\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400 && error.response.data.message === 'User already exists') {\r\n        // If the backend returns a 400 status with a 'User already exists' message, handle it here\r\n        setError('A user with this email already exists. Please log in or use a different email.')\r\n      }\r\n      else if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.error('Signup error', error.response.data);\r\n        // Handle the error response here\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.error('Signup error', error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.error('Error', error.message);\r\n      }\r\n      // Handle general errors here, such as displaying a notification to the user\r\n    }\r\n  };\r\n\r\n  const goToTerms = () => {\r\n    navigate(\"/terms\");\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      // Replace with your backend endpoint\r\n      const response = await axios.post('http://localhost:4000/api/dormfindr/sendEmail', { email: email });\r\n      console.log(response.data.message);\r\n      // Show some success message or handle the response further\r\n    } catch (error) {\r\n      console.error('Verification email error', error);\r\n      // Handle the error here, such as displaying a notification to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-screen\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <img src={user} alt=\"Logo\" />\r\n <div className=\"signup-container\">\r\n  <h2>Create an Account</h2>\r\n  {error && <div className=\"error-message\">{error}</div>} {/* Display error if it exists */}\r\n  {/* ... rest of your JSX ... */}\r\n        <div className=\"input2-container\">\r\n          <input type=\"text\" placeholder=\"Enter your Username\" onChange={(e) => setUsername(e.target.value)} />\r\n        </div>\r\n        <div className=\"input2-container\">\r\n          <input type=\"text\" placeholder=\"Enter your Email\" onChange={(e) => setEmail(e.target.value)} />\r\n        </div>\r\n        <div className=\"input2-container\">\r\n          <input type=\"password\" placeholder=\"Enter your Password\" onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <div className=\"input2-container\">\r\n          <input \r\n            type=\"password\" \r\n            placeholder=\"Confirm your Password\" \r\n            onChange={(e) => setConfirmPassword(e.target.value)} \r\n          />\r\n        </div>\r\n        <div className=\"role-dropdown-container\">\r\n          <select value={selectedRole} onChange={handleRoleChange}>\r\n            <option value=\"TIP Community\">TIP Community</option>\r\n            <option value=\"Dormitory Provider\">Dormitory Provider</option>\r\n          </select>\r\n        </div>\r\n        <button className=\"signup-click\" onClick={handleSignUp}>Sign Up as {selectedRole}</button>\r\n        <p>\r\n          Already have an account? <a href=\"/login\">Log In</a>\r\n          <br />\r\n          <b onClick={goToTerms}>Terms </b> \r\n          and \r\n          <b onClick={goToTerms}> Conditions</b>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}